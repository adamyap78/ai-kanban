<div class="mb-6">
    <div class="flex justify-between items-center mb-4">
        <div class="flex items-center">
            <h1 class="text-3xl font-bold text-primary"><%= board.name %></h1>
        </div>
        
        <div class="flex gap-2">
            <a href="/orgs/<%= organization.slug %>/boards/<%= board.id %>/settings" class="btn btn-neutral btn-sm">Board Settings</a>
        </div>
    </div>
    
    <% if (board.description) { %>
        <p class="text-base-content/70 mb-4 text-lg">
            <%= board.description %>
        </p>
    <% } %>
    
    <% if (locals.flash?.success) { %>
        <div class="alert alert-success mb-4">
            <%= locals.flash.success %>
        </div>
    <% } %>
    
    <% if (locals.flash?.error) { %>
        <div class="alert alert-error mb-4">
            <%= locals.flash.error %>
        </div>
    <% } %>
</div>

<!-- Kanban Board -->
<div class="flex gap-6 overflow-x-auto pb-6 min-h-[600px]">
    <% lists.forEach(list => { %>
        <div class="flex-shrink-0 w-80">
            <!-- List Header -->
            <div class="bg-base-200 rounded-t-lg p-4">
                <div class="flex justify-between items-center mb-2">
                    <h3 class="font-semibold text-lg text-secondary"><%= list.name %></h3>
                    <div class="dropdown dropdown-end">
                        <div tabindex="0" role="button" class="btn btn-ghost btn-sm btn-circle">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01"></path>
                            </svg>
                        </div>
                        <ul tabindex="0" class="dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow">
                            <li><a hx-get="/cards/new?listId=<%= list.id %>" 
                                   hx-target="#cardDetailContent" 
                                   hx-trigger="click"
                                   onclick="document.getElementById('cardDetailModal').showModal()">Add Card</a></li>
                            <li><hr class="my-1"></li>
                            <li><a onclick="editList('<%= list.id %>', '<%= list.name %>')">Edit List</a></li>
                            <li><a onclick="deleteList('<%= list.id %>')" class="text-error">Delete List</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            
            <!-- Cards Container -->
            <div class="bg-base-200 rounded-b-lg p-4 space-y-3 shadow-md" data-list-id="<%= list.id %>">
                <% if (cardsByList[list.id] && cardsByList[list.id].length > 0) { %>
                    <% cardsByList[list.id].forEach(card => { %>
                        <%- include('../../partials/card-item', { card }) %>
                    <% }); %>
                <% } else { %>
                    <div class="text-center text-base-content/50 py-8">
                        <svg class="w-12 h-12 mx-auto mb-2 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        <p>No cards yet</p>
                        <p class="text-sm">Add a card to get started</p>
                    </div>
                <% } %>
                
                <!-- Add Card Button at Bottom -->
                <button id="add-card-button-<%= list.id %>"
                        hx-get="/cards/new?listId=<%= list.id %>" 
                        hx-target="#cardDetailContent" 
                        hx-trigger="click"
                        onclick="document.getElementById('cardDetailModal').showModal()"
                        class="w-full p-3 text-left text-base-content/70 hover:text-base-content hover:bg-base-300 rounded-lg transition-colors group cursor-pointer">
                    <div class="flex items-center gap-2">
                        <svg class="w-4 h-4 group-hover:text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                        </svg>
                        <span class="text-sm">Add a card</span>
                    </div>
                </button>
            </div>
        </div>
    <% }); %>
    
    <!-- Add List Button -->
    <div class="flex-shrink-0 w-80">
        <button onclick="showAddListModal()" class="w-full h-32 border-2 border-dashed border-base-300 rounded-lg flex flex-col items-center justify-center hover:border-primary hover:bg-primary/5 transition-colors">
            <svg class="w-8 h-8 mb-2 text-base-content/50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
            </svg>
            <span class="text-base-content/70 font-medium">Add List</span>
        </button>
    </div>
</div>

<!-- Add List Modal -->
<dialog id="addListModal" class="modal">
    <div class="modal-box">
        <h3 class="font-bold text-lg mb-4">Add New List</h3>
        <form method="POST" action="/lists">
            <input type="hidden" name="boardId" value="<%= board.id %>">
            
            <div class="form-control mb-4">
                <label class="label">
                    <span class="label-text">List Name</span>
                </label>
                <input type="text" name="name" class="input input-bordered" placeholder="Enter list name..." required maxlength="100">
            </div>
            
            <div class="modal-action">
                <button type="button" class="btn btn-ghost" onclick="closeAddListModal()">Cancel</button>
                <button type="submit" class="btn btn-primary">Create List</button>
            </div>
        </form>
    </div>
    <form method="dialog" class="modal-backdrop">
        <button>close</button>
    </form>
</dialog>


<!-- Card Detail Modal -->
<dialog id="cardDetailModal" class="modal">
    <div class="modal-box max-w-2xl">
        <div id="cardDetailContent">
            <!-- Card details will be loaded here -->
        </div>
    </div>
    <form method="dialog" class="modal-backdrop">
        <button>close</button>
    </form>
</dialog>

<script>
// Add List Modal Functions
function showAddListModal() {
    document.getElementById('addListModal').showModal();
}

function closeAddListModal() {
    document.getElementById('addListModal').close();
}


// Card Detail Functions - now handled by htmx

// List Management Functions
function editList(listId, currentName) {
    const newName = prompt('Enter new list name:', currentName);
    if (newName && newName !== currentName) {
        fetch(`/lists/${listId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name: newName })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Failed to update list: ' + (data.error || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to update list');
        });
    }
}

function deleteList(listId) {
    if (confirm('Are you sure you want to delete this list? This will also delete all cards in the list.')) {
        fetch(`/lists/${listId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Failed to delete list: ' + (data.error || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to delete list');
        });
    }
}

</script>